[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eloim\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eloim\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 16.0.1)
[debug]       Load.loadUnit: plugins took 402.7278ms
[debug]       Load.loadUnit: defsScala took 1.2051ms
[debug] [Loading] Scanning directory C:\Users\eloim\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eloim\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 59.6935 ms
[debug]           Load.resolveProject(global-plugins) took 217.2695ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eloim\.sbt\1.0\plugins, plugins: List(<none>))) took 358.9261ms
[debug] [Loading] Done in C:\Users\eloim\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 481.976ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.0181ms
[debug]     Load.loadUnit(file:/C:/Users/eloim/.sbt/1.0/plugins/, ...) took 936.2389ms
[debug]   Load.apply: load took 3676.7483ms
[debug]   Load.apply: resolveProjects took 28.9521ms
[debug]   Load.apply: finalTransforms took 303.2898ms
[debug]   Load.apply: config.delegates took 37.9906ms
[debug]   Load.apply: Def.make(settings)... took 2062.434ms
[debug]   Load.apply: structureIndex took 1655.0806ms
[debug]   Load.apply: mkStreams took 13.5333ms
[info] loading global plugins from C:\Users\eloim\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 126836.1522ms
[debug]           Load.loadUnit: plugins took 217.164ms
[debug]           Load.loadUnit: defsScala took 0.0366ms
[debug] [Loading] Scanning directory C:\Users\eloim\IdeaProjects\monprojet\project
[debug]             Load.loadUnit: mkEval took 36.235ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eloim\IdeaProjects\monprojet\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.0047 ms
[info] loading settings for project monprojet-build from idea.sbt ...
[debug]               Load.resolveProject(monprojet-build) took 21.3523ms
[debug]             Load.loadTransitive: finalizeProject(Project(id monprojet-build, base: C:\Users\eloim\IdeaProjects\monprojet\project, plugins: List(<none>))) took 28.8709ms
[debug] [Loading] Done in C:\Users\eloim\IdeaProjects\monprojet\project, returning: (monprojet-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13159.6491ms
[debug]           Load.loadUnit: cleanEvalClasses took 45.5135ms
[debug]         Load.loadUnit(file:/C:/Users/eloim/IdeaProjects/monprojet/project/, ...) took 13427.0862ms
[debug]       Load.apply: load took 13434.0519ms
[debug]       Load.apply: resolveProjects took 0.5475ms
[debug]       Load.apply: finalTransforms took 39.6052ms
[debug]       Load.apply: config.delegates took 1.1174ms
[debug]       Load.apply: Def.make(settings)... took 369.705ms
[debug]       Load.apply: structureIndex took 145.4621ms
[debug]       Load.apply: mkStreams took 0.0057ms
[info] loading project definition from C:\Users\eloim\IdeaProjects\monprojet\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 19318.0952ms
[debug]     Load.loadUnit: defsScala took 0.0149ms
[debug] [Loading] Scanning directory C:\Users\eloim\IdeaProjects\monprojet
[debug]       Load.loadUnit: mkEval took 0.9047ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eloim\IdeaProjects\monprojet, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.0918 ms
[info] loading settings for project monprojet from build.sbt ...
[debug]         Load.resolveProject(monprojet) took 95.56ms
[debug]       Load.loadTransitive: finalizeProject(Project(id monprojet, base: C:\Users\eloim\IdeaProjects\monprojet, plugins: List(<none>))) took 106.7834ms
[debug] [Loading] Done in C:\Users\eloim\IdeaProjects\monprojet, returning: (monprojet)
[debug]     Load.loadUnit: loadedProjectsRaw took 6513.3147ms
[debug]     Load.loadUnit: cleanEvalClasses took 62.6892ms
[debug]   Load.loadUnit(file:/C:/Users/eloim/IdeaProjects/monprojet/, ...) took 25896.2519ms
[debug] Load.apply: load took 25901.9558ms
[debug] Load.apply: resolveProjects took 0.3038ms
[debug] Load.apply: finalTransforms took 149.431ms
[debug] Load.apply: config.delegates took 0.7789ms
[debug] Load.apply: Def.make(settings)... took 428.1662ms
[debug] Load.apply: structureIndex took 97.4515ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to monprojet (in build file:/C:/Users/eloim/IdeaProjects/monprojet/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55596 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55596, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to monprojet (in build file:/C:/Users/eloim/IdeaProjects/monprojet/)
[debug] > Exec(idea-shell, None, None)
